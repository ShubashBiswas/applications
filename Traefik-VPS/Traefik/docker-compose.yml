services:
  traefik:
    image: "traefik:latest"
    container_name: "traefik"
    ports:
    # HTTP ports:
      - "80:80"
      - "443:443"
    # Email ports:
#      - "25:25"   # SMTP  (explicit TLS => STARTTLS, Authentication is DISABLED => use port 465/587 instead)
#      - "465:465" # SMTP  (implicit TLS)
#      - "587:587" # SMTP  (explicit TLS => STARTTLS)
#      - "143:143" # IMAP4 (explicit TLS => STARTTLS)
#      - "993:993" # IMAP4 (implicit TLS)
#      - "110:110" # POP3  (explicit TLS => STARTTLS)
#      - "995:995" # POP3  (implicit TLS)
#      - "4190:4190" #Managesieve
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.network=proxy"
      - "--providers.docker.exposedbydefault=false"
      # HTTP ports you want to proxy:
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      # HTTPS Redirect:
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      # SSL/TLS Certificates generation:
      - "--entrypoints.websecure.http.tls.certResolver=letsencrypt"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=example@gmail.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      # Email proxy:
#      - "--entryPoints.smtp.address=:25"
#      - "--entryPoints.submission.address=:587"
#      - "--entryPoints.submissions.address=:465"
#      - "--entryPoints.imap.address=:143"
#      - "--entryPoints.imaps.address=:993"
#      - "--entryPoints.pop3.address=:110"
#      - "--entryPoints.pop3s.address=:995"
#      - "--entryPoints.managesieve.address=:4190"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"      # TLS certificate storage
    networks:
      - proxy    
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mydashboard.rule=Host(`traefik.example.com`)"
      - "traefik.http.routers.mydashboard.service=api@internal"
      - "traefik.http.routers.frontendsecure.entrypoints=websecure"
      - "traefik.http.routers.traefik.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=test:$$apr1$$H6uskkkW$$IgXLP6ewTrSuBkTrqE8wj/"

  #This is extract traefik acme to certs for other container if nedded:
#  traefik-certs-dumper:
#    image: ghcr.io/kereis/traefik-certs-dumper:latest
#    container_name: traefik-certs-dumper
#    restart: unless-stopped
#   depends_on:
#      - traefik
#    volumes:
#      # mount the folder which contains Traefik's `acme.json' file
#      - "/etc/localtime:/etc/localtime:ro"
#      - "./traefik/letsencrypt:/traefik:ro"  # Ensure this matches the Traefik volume
      # mount custom domain SSL folder
#      - "./certs:/certs"

# This is an simple example for traefik config for other container:  
#  whoami:
#    image: "traefik/whoami:latest"
#    restart: unless-stopped
#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.whoami.entrypoints=websecure"
#      - "traefik.http.routers.whoami.rule=Host(`whoami.example.com`) || Host(`www.whoami.example.com`)"
#      - "traefik.http.routers.whoami.tls=true"
#      - "traefik.http.routers.whoami.tls.certresolver=tlschallenge"
#      - "traefik.http.routers.whoami.middlewares=secHeaders@file"
#      - "traefik.http.services.whoami.loadbalancer.server.port=80"
#    networks:
#      - "proxy"
volumes:
  letsencrypt:
    driver: local
networks:
  proxy:
    name: proxy